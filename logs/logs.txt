Running on local URL:  http://127.0.0.1:7860

To create a public link, set `share=True` in `launch()`.
action: set_working_folder(args={"foldername":"C:\\writing_tools_python"}) -> Working folder set to 'C:\writing_tools_python'.
assistant > action: list_files(args={}) -> ['.venv', 'move_files.py']
assistant > assistant > File 'move_files.py' loaded successfully.
action: load_file(args={"filename":"move_files.py"}) -> import os
import shutil

def move_and_rename_files(source_dir, destination_dir, old_prefix, new_prefix):
    if not os.path.exists(destination_dir):
        os.makedirs(destination_dir)
    
    for filename in os.listdir(source_dir):
        if filename.startswith(old_prefix):
            new_filename = filename.replace(old_prefix, new_prefix, 1)
            src_file = os.path.join(source_dir, filename)
            dst_file = os.path.join(destination_dir, new_filename)
            shutil.move(src_file, dst_file)
            print(f'Moved and renamed: {src_file} to {dst_file}')

source_directory = 'G:\My Drive\Books\GPT-Agents\graphics'
destination_directory = 'G:\My Drive\Books\GPT-Agents\graphics_5.25.24'
old_prefix = 'CH006'
new_prefix = 'CH08'

move_and_rename_files(source_directory, destination_directory, old_prefix, new_prefix)

assistant > action: save_file(args={"filename":"move_files_rv.py","content":"import os\nimport shutil\n\ndef ensure_directory_exists(directory_path):\n    \"\"\"Ensure the specified directory exists, creating it if necessary.\"\"\"\n    if not os.path.exists(directory_path):\n        os.makedirs(directory_path)\n\ndef move_and_rename_files(src_dir, dest_dir, old_prefix, new_prefix):\n    \"\"\"Move and rename files from the source directory to the destination directory with the given prefixes.\"\"\"\n    ensure_directory_exists(dest_dir)\n\n    for file_name in os.listdir(src_dir):\n        if file_name.startswith(old_prefix):\n            new_file_name = file_name.replace(old_prefix, new_prefix, 1)\n            src_file_path = os.path.join(src_dir, file_name)\n            dest_file_path = os.path.join(dest_dir, new_file_name)\n            shutil.move(src_file_path, dest_file_path)\n            print(f'Moved and renamed: {src_file_path} to {dest_file_path}')\n\nif __name__ == \"__main__\":\n    SOURCE_DIR = 'G:/My Drive/Books/GPT-Agents/graphics'\n    DEST_DIR = 'G:/My Drive/Books/GPT-Agents/graphics_5.25.24'\n    OLD_PREFIX = 'CH006'\n    NEW_PREFIX = 'CH08'\n\n    move_and_rename_files(SOURCE_DIR, DEST_DIR, OLD_PREFIX, NEW_PREFIX)\n"}) -> File 'move_files_rv.py' saved successfully.
assistant > assistant > action: save_file(args={"filename":"move_files_all_rv.py","content":"import os\nimport shutil\nfrom typing import List\n\ndef ensure_directory_exists(directory_path: str) -> None:\n    \"\"\"Ensure the specified directory exists, creating it if necessary.\n    \n    Args:\n        directory_path (str): The path of the directory to check/create.\n    \"\"\"\n    if not os.path.exists(directory_path):\n        os.makedirs(directory_path)\n\n\ndef get_files_with_prefix(src_dir: str, prefix: str) -> List[str]:\n    \"\"\"Retrieve a list of files that start with the given prefix.\n    \n    Args:\n        src_dir (str): The directory to search for files.\n        prefix (str): The prefix to match files against.\n        \n    Returns:\n        List[str]: A list of filenames starting with the given prefix.\n    \"\"\"\n    return [file_name for file_name in os.listdir(src_dir) if file_name.startswith(prefix)]\n\n\ndef move_and_rename_files(src_dir: str, dest_dir: str, old_prefix: str, new_prefix: str) -> None:\n    \"\"\"Move and rename files from the source directory to the destination directory with the given prefixes.\n    \n    Args:\n        src_dir (str): Source directory path.\n        dest_dir (str): Destination directory path.\n        old_prefix (str): The prefix to replace.\n        new_prefix (str): The new prefix to use for renaming.\n    \"\"\"\n    ensure_directory_exists(dest_dir)\n    \n    # Fetch files with the given old prefix\n    files_to_move = get_files_with_prefix(src_dir, old_prefix)\n\n    for file_name in files_to_move:\n        new_file_name = file_name.replace(old_prefix, new_prefix, 1)\n        src_file_path = os.path.join(src_dir, file_name)\n        dest_file_path = os.path.join(dest_dir, new_file_name)\n        shutil.move(src_file_path, dest_file_path)\n        print(f'Moved and renamed: {src_file_path} to {dest_file_path}')\n\n\nif __name__ == \"__main__\":\n    # Source and destination directories\n    SOURCE_DIR = 'G:/My Drive/Books/GPT-Agents/graphics'\n    DEST_DIR = 'G:/My Drive/Books/GPT-Agents/graphics_5.25.24'\n    \n    # Prefixes for renaming\n    OLD_PREFIX = 'CH006'\n    NEW_PREFIX = 'CH08'\n\n    # Perform the move and rename operation\n    move_and_rename_files(SOURCE_DIR, DEST_DIR, OLD_PREFIX, NEW_PREFIX)\n"}) -> File 'move_files_all_rv.py' saved successfully.
assistant > 